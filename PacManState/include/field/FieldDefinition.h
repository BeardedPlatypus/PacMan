#pragma once
#define DllExport __declspec( dllexport )

#define ■ TileType::Solid
#define ◦ TileType::Space
#define G TileType::Gate

#include <vector>
#include "field/TileType.h" 

namespace pacman {
namespace state {
namespace field {

DllExport std::vector<std::vector<TileType>> GetFieldDefinition() {
  std::vector<std::vector<TileType>> result = {
    { ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■ }, 
    { ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■ },
    { ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ◦, ■ },
    { ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ◦, ■ },
    { ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ◦, ■ },
    { ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■ },
    { ■, ◦, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ◦, ■ },
    { ■, ◦, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ◦, ■ },
    { ■, ◦, ◦, ◦, ◦, ◦, ■, ◦, ◦, ◦, ■, ◦, ◦, ◦, ■, ◦, ◦, ◦, ◦, ◦, ■ },
    { ■, ■, ■, ■, ■, ◦, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ■, ■ }, 
    { ■, ■, ■, ■, ■, ◦, ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■, ◦, ■, ■, ■, ■, ■ }, 
    { ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, G, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■ }, 
    { ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ◦, ◦, ◦, ■, ◦, ■, ◦, ■, ■, ■, ■, ■ }, 
    { ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■, ◦, ◦, ◦, ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦ }, 
    { ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■ }, 
    { ■, ■, ■, ■, ■, ◦, ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■, ◦, ■, ■, ■, ■, ■ }, 
    { ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■ }, 
    { ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■ }, 
    { ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■ },
    { ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ◦, ■, ■, ■, ◦, ■ },
    { ■, ◦, ◦, ◦, ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■, ◦, ◦, ◦, ■ },
    { ■, ■, ■, ◦, ■, ◦, ■, ◦, ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ◦, ■, ■, ■ }, 
    { ■, ■, ■, ◦, ■, ◦, ■, ◦, ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ◦, ■, ■, ■ }, 
    { ■, ◦, ◦, ◦, ◦, ◦, ■, ◦, ◦, ◦, ■, ◦, ◦, ◦, ■, ◦, ◦, ◦, ◦, ◦, ■ }, 
    { ■, ◦, ■, ■, ■, ■, ■, ■, ■, ◦, ■, ◦, ■, ■, ■, ■, ■, ■, ■, ◦, ■ }, 
    { ■, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ◦, ■ },
    { ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■, ■ },
  };

  return result;
}

}
}
}
