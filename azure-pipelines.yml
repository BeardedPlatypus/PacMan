# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/PacMan.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Release'
  wixSolution: '**/PacMan-setup.sln'

steps:
- script: |
    vcpkg install sdl2 sdl2-image gtest
    vcpkg integrate install
  displayName: vcpkg

- task: NuGetToolInstaller@0
  displayName: 'Nuget - Install'

- task: NuGetCommand@2
  displayName: 'Nuget - Restore Packages'
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build - Executables'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VisualStudioTestPlatformInstaller@1
  displayName: 'Test - Install'
  inputs:
    packageFeedSelector: 'nugetOrg'
    versionSelector: 'latestStable'

- task: VSTest@2
  displayName: 'Test - Run'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testAssemblyVer2: |
      **\$(buildConfiguration)\*.Test.exe
      !**\*TestAdapter.dll
      !**\obj\** 
    codeCoverageEnabled: true
    runSettingsFile: '$(Build.SourcesDirectory)/CodeCoverage.runsettings'
    otherConsoleOptions: '--collect:"Code Coverage"'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/TEST-*.trx **/TEST-*.coverage'

- task: CopyFiles@2
  displayName: 'Executable Artifact - Copy DLLs'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/$(buildConfiguration)/'
    Contents: '*.?(exe|dll)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true

- task: CopyFiles@2
  displayName: 'Executable Artifact - Copy Assets'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/'
    Contents: 'assets/*.png'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: false
    
- task: PublishPipelineArtifact@0
  displayName: 'Executable Artifact - Publish'
  inputs:
    artifactName: 'Executable'
    targetPath: '$(Build.ArtifactStagingDirectory)'

- task: VSBuild@1
  displayName: 'Build - MSI'
  inputs:
    solution: '$(wixSolution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  displayName: 'Installer Artifact - Copy MSI'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/PacMan-setup/bin/$(buildConfiguration)/'
    Contents: '**/*.msi'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    
- task: PublishPipelineArtifact@0
  displayName: 'Installer Artifact - Publish MSI'
  inputs:
    artifactName: 'Installer'
    targetPath: '$(Build.ArtifactStagingDirectory)'
